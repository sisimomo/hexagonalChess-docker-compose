{
  "id": "49435010-af48-4cdc-a842-9e6142a10fd7",
  "realm": "HexagonalChess",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": true,
  "rememberMe": true,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "cca91da7-cc44-46ff-8aa6-604d9aa375ca",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "49435010-af48-4cdc-a842-9e6142a10fd7",
        "attributes": {}
      },
      {
        "id": "c53e0ab3-0efe-4437-a91e-ffb67f3a5d35",
        "name": "default-roles-hexagonalchess",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "49435010-af48-4cdc-a842-9e6142a10fd7",
        "attributes": {}
      },
      {
        "id": "e776d73a-9442-4873-a389-8b434ace7927",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "49435010-af48-4cdc-a842-9e6142a10fd7",
        "attributes": {}
      }
    ],
    "client": {
      "hexagonalChess-client": [],
      "realm-management": [
        {
          "id": "31d95dde-c8f5-4a7a-ac82-12d1bf9930cf",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "f4678084-c079-4f5e-a27f-ab24f47db75f",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "1a25a82f-f585-42a8-b0d9-76a318792c8a",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "e9f30a8c-11d4-4326-a6f4-adf5352f3466",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "34d15a45-2317-4c9b-8a65-6aff65388b64",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "3116f02d-835f-47a0-986f-53d17d825a3e",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-authorization",
                "view-realm",
                "view-users",
                "query-groups",
                "view-events",
                "manage-events",
                "manage-users",
                "manage-realm",
                "create-client",
                "manage-authorization",
                "query-users",
                "query-clients",
                "query-realms",
                "manage-clients",
                "view-clients",
                "manage-identity-providers",
                "view-identity-providers",
                "impersonation"
              ]
            }
          },
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "6a5da26a-10df-493b-9081-987ff4a6a0e6",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "e83acc97-b4d5-4290-9667-613346bbbaab",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "a881defa-bdd2-4c75-aea1-a8df84ae7c7a",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "907cca33-5785-45a9-b2c4-6a55d9f86f4a",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "dc5ff5f1-7fc0-41cf-a3eb-a5d5dcb17977",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "8ef34f6a-152e-4a78-90c4-6902346a82d0",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "252f9ac7-a700-4c81-ae5d-57841fa16f86",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "59497ee6-c7c4-4269-b74b-42f2e117ee77",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "f2677449-d185-476a-b218-f5b11cc71ecc",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "f7d3a7a3-2cff-478b-9710-62936953d83a",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "06ccbcbc-75a6-4aba-a375-9acd77fca769",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "1631f605-bb90-4bb8-b406-111a7f7f70fa",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        },
        {
          "id": "0d20dc00-07c9-45cf-a9f6-ce0dacb84941",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "8f3f89bb-af36-4b2f-b835-76a357739635",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "2aceedab-0219-4f50-8ce6-526ab467279f",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "450122df-ca3f-456a-a2dd-c396ab7002da",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "63eee0d8-496f-4ebd-9941-b8ffb30afa3e",
          "attributes": {}
        },
        {
          "id": "e5a7eafa-9173-4b6e-8db0-d45025258bf4",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "63eee0d8-496f-4ebd-9941-b8ffb30afa3e",
          "attributes": {}
        },
        {
          "id": "07f170d7-9767-4051-bae6-bbf2f5bd6368",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "63eee0d8-496f-4ebd-9941-b8ffb30afa3e",
          "attributes": {}
        },
        {
          "id": "dfa9a1b4-c264-4249-b047-c6c64f1afeda",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "63eee0d8-496f-4ebd-9941-b8ffb30afa3e",
          "attributes": {}
        },
        {
          "id": "145ce5c8-1817-48d6-bcbd-c03bab8f5f60",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "63eee0d8-496f-4ebd-9941-b8ffb30afa3e",
          "attributes": {}
        },
        {
          "id": "96d8713e-96e1-40d0-a4a0-2b9cab7d6520",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "63eee0d8-496f-4ebd-9941-b8ffb30afa3e",
          "attributes": {}
        },
        {
          "id": "0d6bb6b7-f142-4351-add0-51c2114942f6",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "63eee0d8-496f-4ebd-9941-b8ffb30afa3e",
          "attributes": {}
        },
        {
          "id": "60b083dd-c098-4413-b49e-ca2810b8e710",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "63eee0d8-496f-4ebd-9941-b8ffb30afa3e",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "c53e0ab3-0efe-4437-a91e-ffb67f3a5d35",
    "name": "default-roles-hexagonalchess",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "49435010-af48-4cdc-a842-9e6142a10fd7"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName",
    "totpAppFreeOTPName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "63eee0d8-496f-4ebd-9941-b8ffb30afa3e",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/HexagonalChess/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/HexagonalChess/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "124ff2d5-ca2e-4d83-9671-9551d49b6fcf",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/HexagonalChess/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/HexagonalChess/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "76209991-98f1-4899-a1f4-343085581134",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ccd95600-fc76-448c-b165-0c7adda1fd87",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2aceedab-0219-4f50-8ce6-526ab467279f",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e0642078-7482-4e5a-ba8a-cdd6760068b0",
      "clientId": "hexagonalChess-client",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://hexagonalchess.zucchi.dev/*",
        "https://hexagonalchess-api.zucchi.dev/*"
      ],
      "webOrigins": [
        "https://hexagonalchess.zucchi.dev",
        "https://hexagonalchess-api.zucchi.dev"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.session.required": "true",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ddd65efd-dbd0-415a-bd22-4e536a58eb7d",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "9cf3ed77-5e89-4e8d-847b-aeb44a3007c9",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/HexagonalChess/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/HexagonalChess/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "025ea1c4-533a-4b20-91df-56f2974c6625",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "2e8629b7-478c-48ad-96c9-603810ff6dbb",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "31954e95-7956-498f-bbb6-c4e70ef3ef1a",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "56f64d7e-b05e-4afd-ac5a-a84de6359a8e",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "973cec73-4290-4625-ba4b-8b333a3f168b",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "478d4171-3007-47b5-b543-1b479b1d5d9c",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "f2825faf-e96c-4b74-b7de-e58da5a369a9",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "2f3a9100-2101-45e2-b8e5-019b7943db0c",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "7e10f381-d4a4-46ad-8bb9-802db2af5c5e",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "75c22ecf-91b0-4d23-b657-8d4e1c7cf085",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "2871c3eb-da15-421c-aa7c-4fcb656d5486",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "1a41ceb4-326b-4edb-b39d-b38ad854a369",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "13b1769c-9322-46c3-b633-2fa165f51924",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "20513fca-501d-42b7-948f-05eb41c7bee5",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "edeef29a-5340-4092-9f9d-5199b8bfa5e7",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "21091152-869f-4b36-8b50-38a768a13dd3",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "52ebdd88-6e6e-4952-9bd7-d342b865fb17",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "409eb846-29cb-4bb3-83ff-840239d9a721",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "78e34159-6028-4fb5-bf2e-04d58418e508",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "eb53f4ac-4aab-4558-89a7-bbe3dfae3b9f",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8d29c685-edce-4431-a796-76cdd9f0d843",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "589c5d6b-1d3d-49a0-a422-c33d17957285",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b8474d42-9642-48ab-870f-102ddb5b5dd4",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "90326bc8-c217-46fe-9adf-3a4454135eed",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6f6434a7-e13d-4a19-9c34-71f93d396105",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "924aa8db-57bc-4395-9629-5e44b0dc1252",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8d71c0cd-ec08-4bf1-a552-6e89b435ab51",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "77753475-ac4d-4ee6-b55a-06a4f0603c99",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c9d54b18-2466-40ca-a0f3-993acd84709b",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "84cb4aee-f432-4b4f-bb26-e9b121c2cfdd",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "f1805c7b-c929-490e-a99d-ff2235b17bba",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "6bfb309c-f8f7-42c0-9959-fd5af9fd2c45",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "3938e0e4-922b-4722-822a-88e6ca52f74d",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "3bd6d52e-0809-4c2a-9fde-88b63d58a875",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "4e246b51-27c5-485f-abf2-78eaca3c5da9",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "b4f0f4fc-8633-46e9-b2b9-53f5d68e0275",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "a8307cef-7d49-4e20-bea5-2606000d4ad3",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a8cc9b75-d3cb-4c01-8a0b-4ec42bfe2e54",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [
    {
      "alias": "bitbucket",
      "internalId": "40236970-d0ca-444e-9335-2cb2258c52fd",
      "providerId": "bitbucket",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": true,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "hideOnLoginPage": "false",
        "clientId": "FAKE_CLIEND_ID",
        "acceptsPromptNoneForwardFromClient": "false",
        "disableUserInfo": "false",
        "filteredByClaim": "false",
        "syncMode": "IMPORT",
        "clientSecret": "FAKE_SECRET_ID"
      }
    },
    {
      "alias": "github",
      "internalId": "3b45fb3a-292e-49d4-bc56-9d4889775a9e",
      "providerId": "github",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": true,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "hideOnLoginPage": "false",
        "clientId": "FAKE_CLIEND_ID",
        "acceptsPromptNoneForwardFromClient": "false",
        "disableUserInfo": "false",
        "filteredByClaim": "false",
        "syncMode": "IMPORT",
        "clientSecret": "FAKE_SECRET_ID"
      }
    },
    {
      "alias": "gitlab",
      "internalId": "d4c72fd5-4753-42ae-8a23-f1d7531582f5",
      "providerId": "gitlab",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": true,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "hideOnLoginPage": "false",
        "clientId": "FAKE_CLIEND_ID",
        "acceptsPromptNoneForwardFromClient": "false",
        "disableUserInfo": "false",
        "filteredByClaim": "false",
        "syncMode": "IMPORT",
        "clientSecret": "FAKE_SECRET_ID"
      }
    }
  ],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "c736702c-16a4-466f-8f18-9e44ab3c698c",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper"
          ]
        }
      },
      {
        "id": "737a6601-a0d6-4de3-b273-2cfb3fdc6081",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "1860bd5b-877e-4ae5-bd0d-ad403323065f",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "a0deedb7-1ee8-4f2f-8b8e-4778f17e6f52",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper",
            "saml-user-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper"
          ]
        }
      },
      {
        "id": "fe4decbf-a05c-46cd-b3b7-9f2c4cd08c1d",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "4b9d6c39-663c-43c4-8f3f-107ddf4edc73",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "c05cfe85-d742-43c9-9627-088beb2bab92",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "40031a9a-556c-44bb-9c56-269fb33fb17a",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "fbecc485-8417-40c9-9ea1-d0ddccb6338b",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "1f80d5c7-2c52-4e66-b0e7-7c5215a7aa3d",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "c4cdc425-3fb3-44aa-80a0-5f7fcf10ef6e"
          ],
          "secret": [
            "LHNh2sXgDKRDxzth-ZwKhL2v7ThhTIac41EIo6OPOaKuZztxBWeQd2yNYIHtig5NVaUJn5ebnEf64qOzegIwuA"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "80a58347-e62c-4c63-84cd-e521b44337e8",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAq4wyaC7QGQzM2u6ewLfIJaMr2U0LwhaSa7+Uro9e3oonZH53+I8bHOVMjJTYECoswomg830cIeKj4U91Ds5Rxf/YhB/7d7JccEtGdvewRe2ip6Cr5l99SgVxysmozN5hKtZBKSCxr7I/11Ip2RbRGZGF67c4tews+nFf5KP6WOQZB5DThGcWT2/V2d6/FracSETAmjjBPI3fKIeFnO+8KW4NSmbSdm2j3DKSiruk7x9PpyxCV3nxXhjBy2XDs/ZwjztMTXq8+bpLXbpEtRFRranu4pVSmYmgdSrHZzFeqOezGaSZ85fmXTwXUfI2k185nzT3NINZrQUO4xpJCfRBCQIDAQABAoIBAAwDVHTUAWXdrftPXj3h6NHM6klMckw4Sy7hMsLiHptAKrfIfPOCpvwIKSsHkdVY9Ls3StZ+PoH3dnE04J5Fr7eJPfLrr+8PBhbliJTUbctJ07wAHgWTDomoVbKFGm1lTcHjkNrV06eZeIvGMNDHXqN3G70Y3q9rr28m0ReobYO7sQ1MBZRb0b0cdrsEuU/Tos+MmWRFvl3SnmiLVc/VIzpPIv8Ck2VKk0bYy8CMn/6ibmgv1tGdBbB6rsLPhXVKCT6Y3xcysG9oVhbfgYm3OQHI7txyu4g53fRVP4/Q+LPQsp4o+6KuJqF/+M+0MVppOKo+92JySaLq2wDojDTOJuECgYEA2yC4BGFUIdxwi1vH7z0gEhsEPwzNnzbRPZlmIkT1RWLAMlxZkS1qFkZ7hTvEtADsISt4i8UaZyVyTSPW/lLYUgqVJJMQ+wM21uxTvNPwIkCbJj4easwiu3xH6AAxvNGD6AIG31ccQhIwcZxcnK3P+fwsmIEfxmVuVdMNZlNY9ukCgYEAyGni58jxzTREZD5R697ALflvul2V7+R6bVM1QQ6PNvHVUvu99CBmYuG/W5sSGqIa1LJzh6J7W5aZfLVR4o5yb/N1Ypgc9CdK9LFZHtMNIi12uTnB09P9Xhp9bUOIr2MbHUlabTaFLUo1w/mC8HEwccrzXHCDCcSbwSvMbJru5SECgYB6d+rg59SxqBZujLlNiIgoFlllM66oUWbYWqeud4PtZ6erfdnBPfSQxou6hxEE2Y8fasBQvbRn+ZHMcz9xnLOyBqAcdOWEpOM9c4/JdVo8iocr9IPjhHvU9Tzq+VDTCvYB8UAOCw2MD8ZreMx59NrMCJiUE3bC12W3KeHPUr3iIQKBgEkhKiT91A3W5qXVf7sb2vBrtnNAtveEXZAK7sHAeE3KTNcs+RFdyT6HtXXNzftd74BxZWq2xWCUQYmZ+Dk9VVC4e7rwWpBUzisfk6+Fv6MbB9lq0+lhz3BJJj96hyPIfBphq9dyL4JpM9lA8KCgDNdZARhYDdjAnz0LqFpw5n9BAoGBAId8w25gzMcVaPeoGCp20JDLgG7/rGYafd6NDozwDKEVYRu4Fz9qST+588nzzWB31I2JcO9PWrrYsi27nv7/Rm+wrBLqDPoiunjGvQPMFUnV19bUWrVOrzav5jTdEJA4AwJDJVirVXdXvekqOXN6HmB/xg9133Qkze9NnL3JxzEf"
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICtzCCAZ8CBgGJ7SpHMDANBgkqhkiG9w0BAQsFADAfMR0wGwYDVQQDDBRIZXhhZ29uYWxDaGVzc1NhbXBsZTAeFw0yMzA4MTMwNDMwMThaFw0zMzA4MTMwNDMxNThaMB8xHTAbBgNVBAMMFEhleGFnb25hbENoZXNzU2FtcGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAq4wyaC7QGQzM2u6ewLfIJaMr2U0LwhaSa7+Uro9e3oonZH53+I8bHOVMjJTYECoswomg830cIeKj4U91Ds5Rxf/YhB/7d7JccEtGdvewRe2ip6Cr5l99SgVxysmozN5hKtZBKSCxr7I/11Ip2RbRGZGF67c4tews+nFf5KP6WOQZB5DThGcWT2/V2d6/FracSETAmjjBPI3fKIeFnO+8KW4NSmbSdm2j3DKSiruk7x9PpyxCV3nxXhjBy2XDs/ZwjztMTXq8+bpLXbpEtRFRranu4pVSmYmgdSrHZzFeqOezGaSZ85fmXTwXUfI2k185nzT3NINZrQUO4xpJCfRBCQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQA9rGvln0FDy5hTMc64YhTKmMkbAmOyV/MJ6WlYZ0VqM1YHNfPZrjQGZOK8qvUAXscnlrWnDhqFVbxf9TyBFnVF8XKXKGwdRrqOJVRK0c2mTa/gVGWHOMHEdvAK+Mh0eJAh+5Rz+c5q0XAJcNyMlSvXkhnA1MMV2Ck+bIbTWmbQ58NvY69AjQlEHSXeSsCF0YSDYmYmesnCI4ao5HPrmYE8Aa0SHP9k2c6lpeVecgIH2QDLu/iRACkd3npXxeXpxoHQWBxlXDmM18R/dryRBRclzt+I7xuK0bZexTl9zDxk96DQ00odk/tYZYdc+5S6iEM5ICoMoPfosO5sdZ+//j+s"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "49f7babb-f868-4d44-956e-911eaebc57c3",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAlzT44Xa/pjPY2RO231YA6yYk+aQIKkDpUdyIlcxxP8ZbPS/SU/8TqUnWHETD1JQDDV9Z87hvQzkbJcstxmbcMAvtEYBk3UIKExcNpt7POnt458Pxl1tObk318WFeL4HCWGyEqMdHB7oipjirO2JIegpnPa+JuMvzcevGPpE0vdHwFGkPbekGq0JZlfqfDGJLHRVnB5OUD+2otMywIMIHLx3JzI7VdiC0Xvtr+w2Wz+x/aerNNVWcXEUVh+dtzt+IuIdLJlTQnkQRZHc1azTTtfIPnn3fQ23tDUc3uwH0kob5AlDEaNur7kXqxwEL3IBvOTTjon/tJk+QNp/eYMc2uQIDAQABAoIBAAFiQsid7Cjnmv341WPpNwf5wEw5l2qJ422vYsvuK4sWR7Re3Ov6OLSrmOFfxh8eYAvuCLie2txwsfN3p4HhqOtqV5p0ziZIAp3wnA2WULUqrWN/nrefEqr5HQdwXz6MLRB8woggrCYceW6XR/zTR2zf5CdDgZDqau0DWQXfrsGFbOrx3O+E4MMkDTzNp+IxR4lA/dnrlx6jZ02I233DpvHFBONd8gE7/nrOL4Dvp+pnyXiPdeGSdEepX3H6CZM0uo2jpHSz8cXAG8FdupcW6DIn3RlNp0igJipZM6Rvxl2xA8p/Mcu2dHI+QwS2s74SVaoyMJn7bJni8KHvNQNCVbUCgYEAycSc5LELN2fdYRtC4TeIX3BjF7XdjccE9bkX/wPfQF72Z7mEHNgidr9Buq0cHizW3Wck4kW4PEY2dNtqlegfaJ5nHrjkVLAsADiylZyxyJUKWHWQu/4f1nKay+pGqNDanjqlIaEFtAZ11ULPoEHmyeS/nQ4CKUPMj6t04fH1Uf0CgYEAv9lRaNlUT9eUUTIyNzoosaNLcW2krBJEOBYXhZVAs8VkbKuaAYBnV+a8fa53loEl68zolJ1f/kVeX0mH7T675PIcMW9LwWjtvGBlfL7kqawrepykXHOrAp5kGJOCr/da+KocgKqn8Z2fO6+Z99xUd1f74iWsB/X643mlhYVy5m0CgYEAhuh7rz3hrg44q7E6qrQi7w2KdFQZ665i1poIPW8tWzEjuH8GovKxOIzxOgx9fH+muys4MkNDyKl5x/Dd95XZSm5/rL8bjLSu9wbyAa9gACoHXNZfDBQC3bSLZEUlMcNUKfA0caPk2FZpe0rM4O6vjdbxd+Xh9A1tPbL62Aica1ECgYEAmIXmoiv+SsfCg9cbcyrKxYdkaFZaD+8py0lNBAfH++RX1cmL09vIzWqEuorlSoN8qX4r/lMryRRPVgQ4i5ZPfVI6tdac7LRGJXih1s5RLs/RdVZpmZLgB2HzhFJqGQnXilB7/pMul/nPaX1PNG43vPX3LDD1FxMploXU4VVaJvUCgYA9QifP8eDggXQLLQ8xlQHHefoXG5QCMnimY/QL3MWtLpb5yO+zdEryTE1mL37pEu2Pf9K1L6uLxv7aKgRb55jtv8e78exmkebzZSrpdz0XhRLHJVLnjkvwPOaLDB5JKXKcbielP1NbHgwnE4h0MOhZGm2sp1AaC8mBvOv9dLnF6w=="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICtzCCAZ8CBgGJ7SpI6zANBgkqhkiG9w0BAQsFADAfMR0wGwYDVQQDDBRIZXhhZ29uYWxDaGVzc1NhbXBsZTAeFw0yMzA4MTMwNDMwMThaFw0zMzA4MTMwNDMxNThaMB8xHTAbBgNVBAMMFEhleGFnb25hbENoZXNzU2FtcGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlzT44Xa/pjPY2RO231YA6yYk+aQIKkDpUdyIlcxxP8ZbPS/SU/8TqUnWHETD1JQDDV9Z87hvQzkbJcstxmbcMAvtEYBk3UIKExcNpt7POnt458Pxl1tObk318WFeL4HCWGyEqMdHB7oipjirO2JIegpnPa+JuMvzcevGPpE0vdHwFGkPbekGq0JZlfqfDGJLHRVnB5OUD+2otMywIMIHLx3JzI7VdiC0Xvtr+w2Wz+x/aerNNVWcXEUVh+dtzt+IuIdLJlTQnkQRZHc1azTTtfIPnn3fQ23tDUc3uwH0kob5AlDEaNur7kXqxwEL3IBvOTTjon/tJk+QNp/eYMc2uQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBXVoFmXmhFYMtUSWZzNqBUc9AJ7CV3BWThqQ7IxBKMiD1b1EE/rdeg7Q6zWFNZKnx/ftJw88zDMXMFtWfE6S2EMED9cQshQ+tmJ6/HCKvSrvLsZFe7R/PMdRZtxdGDyvqidB7ybnfqmMlva64/BEuZEjTBt+AL1RyKZw1vGMXTz4qI4JETTUkuBzQLqcbT5+3fXQV4SC//TqCi6zHbEmcXuRm5zpOU4AzYHReyWkloyw1L3yEKXiu0TRpIMY3jwrkFsCt+1Gxi2OKtHdLOpzn+vjtUIgPlHZMnLeHNAPbnGGPLPDARyq65I44+KrklkZq7U2Dj1U7VFPaxZlqtvpDh"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "b23e7e0e-9b57-4838-8476-d396ae2e5b24",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "fd6405d8-b1c2-44b0-a34b-1a1556e7196d"
          ],
          "secret": [
            "MSWApdZUxonLTvNwV0Ecnw"
          ],
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "c486448f-0dd0-4cce-8410-fced341b8b1f",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4b399abd-35eb-4279-8729-21e4c0ebf363",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a98d408d-1282-46da-8ef9-a271be484805",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f8c0301d-512f-45c1-9660-dcadc8e6de6f",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "505a22c6-4a4e-4b36-b8fa-87525237277a",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a20160fc-e600-4ecc-8c4d-ce95a5ba06e3",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "dc9a820c-8ff9-46a7-9d9d-007428fd693e",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "36d1028e-53dd-4bea-9d0a-6fc5aff7041c",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2651ff61-11cc-43d7-af80-2c84f24e9f78",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3acc23ee-221d-49c7-89f5-77fc94cedd7c",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "62cffb91-b84c-4818-a030-c98027359320",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "aa3c9f82-b618-4f6d-b2a3-7611e493cec3",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e849f486-3169-4918-a8fd-b409825f1fa0",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "602afef8-eb2e-4ad6-a85d-adfdc71aa13b",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b321c33e-48ff-422d-bf55-e964e9518bdc",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "49a8b74a-f320-428d-a508-4b0a5b1706b9",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "105fd650-775c-4e0a-9154-0963ef1b9cb5",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0ed98a6a-6c20-4537-a445-1f29fb1fb155",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "b9a01984-5065-4d7f-9dae-dcaf5b3965f9",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "9fafc7f0-823f-4fcd-a7a7-185ce11310ea",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "22.0.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}